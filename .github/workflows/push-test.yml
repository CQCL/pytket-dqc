name: Push Test
on:
  workflow_dispatch:
  pull_request:

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    steps: 

      - name: Set up Python 3.9.12
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.12

      - name: Cache kahypar Build
        id: cache-kahypar
        uses: actions/cache@v3
        with:
          path: ~/kahypar.cpython-39-x86_64-linux-gnu.so
          key: kahypar_cache

      - name: Install boost
        run: sudo apt-get install libboost-all-dev

      - name: Setup cmake
        if: ${{ steps.cache-kahypar.outputs.cache-hit != 'true' }}
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: 3.16.x

      - name: Checkout kahypar
        if: ${{ steps.cache-kahypar.outputs.cache-hit != 'true' }}
        uses: actions/checkout@v2
        with: 
          repository: kahypar/kahypar
          submodules: recursive
          fetch-depth: 1

      - name: Build kahypar
        if: ${{ steps.cache-kahypar.outputs.cache-hit != 'true' }}
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DKAHYPAR_PYTHON_INTERFACE=1 -DBUILD_TESTING=OFF
          make
          cd python
          make
          cp kahypar.cpython-39-x86_64-linux-gnu.so ~/

      - name: Install kahypar
        run: cp ~/kahypar.cpython-39-x86_64-linux-gnu.so /opt/hostedtoolcache/Python/3.9.12/x64/lib/python3.9/site-packages

      - name: Checkout pytket-dqc
        uses: actions/checkout@v2

      - name: Install pytket-dqc
        run: | 
          sudo apt-get install graphviz graphviz-dev
          pip install .

      - name: Install testing requirements
        run: pip install -r tests/test_requirements.txt

      - name: Tests
        run: pytest --cov-report term-missing:skip-covered --cov=src/pytket_dqc tests/ --durations=10

      - name: Type check
        run: mypy src/pytket_dqc tests
        
      - name: Code format check
        run: flake8 src/pytket_dqc tests

      - name: Build documentation
        run: |
          pip install -r docs/docs_requirements.txt
          cd docs
          make html

      - name: Save documentation
        uses: actions/upload-artifact@v2
        with:
          name: docs_html
          path: docs/build/html
